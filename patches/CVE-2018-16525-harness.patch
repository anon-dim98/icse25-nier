From 39c2e171eb48e907473d9f0057ca6e17b2573399 Mon Sep 17 00:00:00 2001
From: Paschal Amusuo <amusuopaschal@gmail.com>
Date: Wed, 16 Oct 2024 18:49:48 -0400
Subject: [PATCH] Changes to recreate and expose CVEs

---
 .../ParseDNSReply/ParseDNSReply_harness.c     | 43 +++++++++++++------
 1 file changed, 29 insertions(+), 14 deletions(-)

diff --git a/test/cbmc/proofs/ParseDNSReply/ParseDNSReply_harness.c b/test/cbmc/proofs/ParseDNSReply/ParseDNSReply_harness.c
index 74e594f..1fa20c1 100644
--- a/test/cbmc/proofs/ParseDNSReply/ParseDNSReply_harness.c
+++ b/test/cbmc/proofs/ParseDNSReply/ParseDNSReply_harness.c
@@ -25,18 +25,28 @@
 * Signature of function under test
 ****************************************************************/
 
-uint32_t prvParseDNSReply( uint8_t * pucUDPPayloadBuffer,
-                           size_t uxBufferLength,
-                           BaseType_t xExpected );
+// ICSE-NIER: Updated the function signature to expose CVE-2018-16525
+// uint32_t prvParseDNSReply( uint8_t * pucUDPPayloadBuffer,
+//                            size_t uxBufferLength,
+//                            BaseType_t xExpected );
+
+uint32_t DNS_ParseDNSReply( uint8_t * pucUDPPayloadBuffer,
+    size_t uxBufferLength,
+    struct freertos_addrinfo ** ppxAddressInfo,
+    BaseType_t xExpected,
+    uint16_t usPort );
 
 /****************************************************************
 * Abstraction of DNS_ReadNameField proved in ReadNameField
 ****************************************************************/
 
-size_t DNS_ReadNameField( const uint8_t * pucByte,
-                          size_t uxRemainingBytes,
-                          char * pcName,
-                          size_t uxDestLen )
+// ICSE-NIER: Updated the function signature to expose CVE-2018-16525
+size_t DNS_ReadNameField( ParseSet_t * pxSet,
+                              size_t uxDestLen )
+// size_t DNS_ReadNameField( const uint8_t * pucByte,
+//                           size_t uxRemainingBytes,
+//                           char * pcName,
+//                           size_t uxDestLen )
 {
     __CPROVER_assert( NETWORK_BUFFER_SIZE < CBMC_MAX_OBJECT_SIZE,
                       "NETWORK_BUFFER_SIZE < CBMC_MAX_OBJECT_SIZE" );
@@ -47,12 +57,12 @@ size_t DNS_ReadNameField( const uint8_t * pucByte,
 
 
     /* Preconditions */
-    __CPROVER_assert( uxRemainingBytes < CBMC_MAX_OBJECT_SIZE,
+    __CPROVER_assert(  pxSet->uxSourceBytesRemaining < CBMC_MAX_OBJECT_SIZE,
                       "ReadNameField: uxRemainingBytes < CBMC_MAX_OBJECT_SIZE)" );
     __CPROVER_assert( uxDestLen < CBMC_MAX_OBJECT_SIZE,
                       "ReadNameField: uxDestLen < CBMC_MAX_OBJECT_SIZE)" );
 
-    __CPROVER_assert( uxRemainingBytes <= NETWORK_BUFFER_SIZE,
+    __CPROVER_assert(  pxSet->uxSourceBytesRemaining <= NETWORK_BUFFER_SIZE,
                       "ReadNameField: uxRemainingBytes <= NETWORK_BUFFER_SIZE)" );
 
     /* This precondition in the function contract for prvReadNameField
@@ -62,9 +72,9 @@ size_t DNS_ReadNameField( const uint8_t * pucByte,
      *       "ReadNameField: uxDestLen <= NAME_SIZE)");
      */
 
-    __CPROVER_assert( pucByte != NULL,
+    __CPROVER_assert( pxSet->pucByte != NULL,
                       "ReadNameField:  pucByte != NULL )" );
-    __CPROVER_assert( pcName != NULL,
+    __CPROVER_assert(  pxSet->pcName != NULL,
                       "ReadNameField:  pcName != NULL )" );
 
     __CPROVER_assert( uxDestLen > 0,
@@ -74,7 +84,7 @@ size_t DNS_ReadNameField( const uint8_t * pucByte,
     size_t index;
 
     /* Postconditions */
-    __CPROVER_assume( index <= uxDestLen + 1 && index <= uxRemainingBytes );
+    __CPROVER_assume( index <= uxDestLen + 1 && index <= pxSet->uxSourceBytesRemaining );
 
     return index;
 }
@@ -115,6 +125,8 @@ void harness()
 {
     size_t uxBufferLength;
     BaseType_t xExpected;
+    uint16_t usPort;
+    struct freertos_addrinfo * pxAddressInfo;
     uint8_t * pucUDPPayloadBuffer = malloc( uxBufferLength );
 
     __CPROVER_assert( NETWORK_BUFFER_SIZE < CBMC_MAX_OBJECT_SIZE,
@@ -124,7 +136,10 @@ void harness()
     __CPROVER_assume( uxBufferLength <= NETWORK_BUFFER_SIZE );
     __CPROVER_assume( pucUDPPayloadBuffer != NULL );
 
-    uint32_t index = prvParseDNSReply( pucUDPPayloadBuffer,
+    // ICSE-NIER: Updated the function invocation to expose CVE-2018-16525
+    uint32_t index = DNS_ParseDNSReply( pucUDPPayloadBuffer,
                                        uxBufferLength,
-                                       xExpected );
+                                       &pxAddressInfo,
+                                       xExpected,
+                                       usPort );
 }
-- 
2.25.1

